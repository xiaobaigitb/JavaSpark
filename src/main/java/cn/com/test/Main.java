package cn.com.test;

import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Stack;

import org.apache.commons.collections.IteratorUtils;
import org.apache.commons.lang.StringUtils;
import org.apache.spark.SparkConf;
import org.apache.spark.api.java.JavaPairRDD;
import org.apache.spark.api.java.JavaRDD;
import org.apache.spark.sql.Dataset;
import org.apache.spark.sql.Row;
import org.apache.spark.sql.SaveMode;
import org.apache.spark.sql.SparkSession;
import org.apache.spark.sql.catalyst.expressions.GenericRowWithSchema;
import org.apache.spark.sql.types.StructType;
import org.apache.spark.sql.types.DataTypes;
import org.apache.spark.sql.types.StructField;
import org.apache.spark.api.java.function.FlatMapFunction;
import org.apache.spark.api.java.function.Function;

import scala.Tuple2;

/*
 *  盈亏-平均成本法,先处理在startdate,enddate期间有双向交易的账户
 *   
 *     
 *  参数顺序：
 *   1： srcsys=args[0];//系统
	 2： sparktable=args[1];//存放spark临时数据的表
     3： startdate=args[2];//开始日期
	 4： enddate=args[3];//结束日期	
	 5： schema=args[4];//schema
	 6： sparkname=args[5];//spark任务名称，方便查找
	 7： step=args[6];//对应的步骤。
	 8:  midtable=args[7];//交易表加工后作为中间表输入。
	 9:  savemode=args[8];//spark将结果写入sparktable的模式,append 和overwrite。
 *  
 *  
 */
public class Main {

    static String rootPath = "F:\\ideaProducts\\JavaSpark\\src\\main\\resources\\data\\";

    public static void main(String[] args) throws Exception {

        //设置Hadoop执行环境
        SetHadoopDev.init();
        SparkConf conf = new SparkConf();
        SparkSession hc = SparkSession.builder()
                .config(conf)
                .appName("ddd")
                .master("local[1]")
                //.master("yarn-cluster")
                .getOrCreate();

        String file = "trd_ta_saletran";
        List<StructField> lookdf_st_list = getSchemaList(file);

        StructType lookdf_st = DataTypes.createStructType(lookdf_st_list);
        Dataset<Row> lookdf = hc.read().schema(lookdf_st).option("header", "true")
                .csv(rootPath + "csv\\" + file + ".csv");
        hc.createDataFrame(lookdf.toJavaRDD(), lookdf_st).write()
                .format("parquet")
                .mode(SaveMode.Append).save(rootPath + "parquet\\" + file);
    }

    public static List<StructField> getSchemaList(String tableName) {

        List<StructField> lookdf_st_list = new ArrayList<StructField>();

        switch (tableName) {
            case "trd_ta_saletran":
                lookdf_st_list.add(DataTypes.createStructField("trd_st_trx_serialno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_type", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_account_type", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_account", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_product_type", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_product", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_agency_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_tano", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("lval_ag", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("rval_ag", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("lval_rg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("rval_rg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("lval_ar", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("rval_ar", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency_of_lv1", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region_of_lv1", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("cserialno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_cust_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_tradeacco_reg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("agencyno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("netno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_sdata", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_share_type", DataTypes.StringType, true));
            case "org_areasplit_common":
                lookdf_st_list.add(DataTypes.createStructField("KEY", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("area_rule_id", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_product_type", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_product", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_cust_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_type", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_account_type", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_account", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_agency_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_org_tree", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_org", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_org_tree_of_bl", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_org_of_bl", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_custmngr_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_custmngr", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("priority", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ratio", DataTypes.createDecimalType(5, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_from", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_to", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("lval_ag", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("rval_ag", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("lval_rg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("rval_rg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("lval_ar", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("rval_ar", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("lval_bl", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("rval_bl", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_tano", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("cserialno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_tradeacco_reg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("agencyno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("netno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_share_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_arsplt_chg_flag", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_anal_dymic", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency_of_lv1", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region_of_lv1", DataTypes.createDecimalType(12, 0), true));
            case "ass_ta_fundbal_chg":
                lookdf_st_list.add(DataTypes.createStructField("shr_chg_serialno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_type", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_account_type", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_account", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_product_type", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_product", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_agency_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_tano", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("lval_ag", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("rval_ag", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("lval_rg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("rval_rg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_from", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_to", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency_of_lv1", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region_of_lv1", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_cust_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("fa_cfm_ef", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("fa_cfm_et", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_tradeacco_reg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("agencyno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("netno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_sdata", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_share_type", DataTypes.StringType, true));
            case "ass_ta_shr_arsplt":
                lookdf_st_list.add(DataTypes.createStructField("shr_chg_serialno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_tano", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_cust_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("area_rule_id", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_org_tree_of_brnch", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_brnchorg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_org_tree_of_bl", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_blorg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_custmngr_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_custmngr", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_from", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_to", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("fa_cfm_ef", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("fa_cfm_et", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("div_ratio", DataTypes.createDecimalType(5, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_sdata", DataTypes.StringType, true));
            case "trd_specar_bal_detail":
                lookdf_st_list.add(DataTypes.createStructField("dk_tano", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("cserialno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("ori_cserialno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_cust_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_mkt_trade_type", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ori_sk_mkt_trade_type", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_account", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_tradeacco_reg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_product", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_share_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("agencyno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("netno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_org_tree", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_org", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_org_tree_of_bl", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_org_of_bl", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_custmngr_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_custmngr", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("occur_shares", DataTypes.createDecimalType(28, 12), true));
                lookdf_st_list.add(DataTypes.createStructField("shares", DataTypes.createDecimalType(28, 12), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_from", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_to", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dymc_ratio", DataTypes.createDecimalType(14, 10), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("area_rule_id", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("memo", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_crt", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_modi", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("batchno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("updatetime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("uuid", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_check_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_record_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bk_fundaccount", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bk_tradeaccount", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_bourseflag", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_cust_type_sub", DataTypes.StringType, true));
            case "mid_trd_specar_tran_split":
                lookdf_st_list.add(DataTypes.createStructField("dk_tano", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("cserialno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_account", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_tradeacco_reg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_product", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_share_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("agencyno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("netno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_org_tree", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_org", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_org_tree_of_bl", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_org_of_bl", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_custmngr_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_custmngr", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ratio", DataTypes.createDecimalType(14, 10), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_cust_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_cust_type_sub", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("occur_shares", DataTypes.createDecimalType(28, 12), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_to", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_from", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("area_rule_id", DataTypes.createDecimalType(12, 0), true));
            case "tmp_rec_caculate_data":
                lookdf_st_list.add(DataTypes.createStructField("dk_tano", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("cserialno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_cust_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_cust_type_sub", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_account", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_tradeacco_reg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_product", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_share_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("agencyno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("netno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_mkt_trade_type", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("confirm_shares", DataTypes.createDecimalType(28, 12), true));
                lookdf_st_list.add(DataTypes.createStructField("mkt_trade_type_class", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("shr_chg_dir", DataTypes.createDecimalType(4, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_org_tree", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_org", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_org_tree_of_bl", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_org_of_bl", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_custmngr_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_custmngr", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ratio", DataTypes.createDecimalType(14, 10), true));
                lookdf_st_list.add(DataTypes.createStructField("area_rule_id", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("cserialno_oth_side", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bk_fundaccount", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bk_tradeaccount", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_bourseflag", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("effective_from", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_to", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("handle_order", DataTypes.createDecimalType(1, 0), true));
            case "agrm_tradeaccount_ds":
                lookdf_st_list.add(DataTypes.createStructField("sk_account", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("bk_tradeaccount", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("agencyno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("open_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("close_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_account_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_freeze_cause", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("back_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_capitalmode", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bankno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bank_account", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("name_inbank", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("childnetno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("last_modify", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("memo", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_crt", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_modi", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dac", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ddvc", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("batchno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("updatetime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("uuid", DataTypes.StringType, true));
            case "org_branch_hierarchy":
                lookdf_st_list.add(DataTypes.createStructField("sk_org", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_org_tree", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("org_level", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_org_parent", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_org_of_lv1", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_org_of_lv2", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_org_of_lv3", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_org_of_lv4", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_org_of_lv5", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("lval", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("rval", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("flag", DataTypes.createDecimalType(4, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_from", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_to", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("memo", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_crt", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_modi", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dac", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ddvc", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("batchno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("updatetime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("uuid", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_check_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_record_status", DataTypes.StringType, true));
            case "trd_fund_dividend":
                lookdf_st_list.add(DataTypes.createStructField("trd_div_serialno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_product", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_share_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_account", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_tradeacco_reg", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_currency", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("request_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("reg_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("last_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("div_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("bk_fundaccount", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bk_tradeaccount", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("agencyno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("netno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_tano", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("cserialno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("total_shares", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("unit_profit", DataTypes.createDecimalType(6, 4), true));
                lookdf_st_list.add(DataTypes.createStructField("total_profit", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("tax", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_bonus_flag", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("real_balance", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("reinvest_balance", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("real_shares", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("fare", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("netvalue", DataTypes.createDecimalType(6, 4), true));
                lookdf_st_list.add(DataTypes.createStructField("frozen_balance", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("frozen_shares", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("income_tax", DataTypes.createDecimalType(10, 4), true));
                lookdf_st_list.add(DataTypes.createStructField("stamp_tax", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("memo", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_crt", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_modi", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dac", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ddvc", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("batchno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("updatetime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("uuid", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("name_inbank", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_capitalmode", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bankno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bank_name", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bank_account", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("rule_id", DataTypes.createDecimalType(12, 0), true));
            case "trd_cust_income_detail":
                lookdf_st_list.add(DataTypes.createStructField("trd_it_trx_serialno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_tano", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("cserialno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("ori_cserialno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_account", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_tradeacco_reg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_currency", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("agencyno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("netno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_product", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_share_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("reg_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_from", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_to", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ori_net_value", DataTypes.createDecimalType(10, 4), true));
                lookdf_st_list.add(DataTypes.createStructField("ori_sk_mkt_trade_type", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_mkt_trade_type", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_bourseflag", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("ori_shares", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("ori_cost", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("last_shares", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("share_change", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("shares", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("cost", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("income", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("cost_of_income", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("total_cost", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("total_income", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("total_cost_of_income", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("memo", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_crt", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_modi", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dac", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ddvc", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("batchno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("updatetime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("uuid", DataTypes.StringType, true));
            case "prod_product":
                lookdf_st_list.add(DataTypes.createStructField("sk_product", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("bk_product", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("product_cname", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("product_ename", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("product_short_ename", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("product_short_name", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("product_efullname", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("issue_start_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("issue_end_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("prod_setup_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_bonus_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("parvalue", DataTypes.createDecimalType(10, 6), true));
                lookdf_st_list.add(DataTypes.createStructField("issue_price", DataTypes.createDecimalType(10, 6), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_fund_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("actual_raised_bal", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("raised_shares", DataTypes.createDecimalType(18, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("interest", DataTypes.createDecimalType(18, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("first_open_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("time_limit", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("disp_order", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_prod_type_of_main", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_prod_type_of_inv", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("memo", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_crt", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_modi", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dac", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ddvc", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("batchno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("updatetime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("uuid", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_currency", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("fund_grade", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_sale_model", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sub_period", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inner_product_name", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_tano", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_risk_level", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_pub_accnav", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_carry_over_way", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_price_pub_way", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("net_precision", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("bchmk", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("service_flag", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("prod_trans_date", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_valuation_system", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_product_of_inv", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("maturity_date", DataTypes.createDecimalType(12, 0), true));
            case "prod_product_type":
                lookdf_st_list.add(DataTypes.createStructField("sk_product_type", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_product_type_way", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("product_type_name", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("product_type_ename", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("disp_order", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("memo", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_crt", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_modi", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dac", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ddvc", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("batchno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("updatetime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("uuid", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bk_prode_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_check_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_record_status", DataTypes.StringType, true));
            case "ip_cust":
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_cust_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_cust_level", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region_lsttrx", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_open_nettrade", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_open_callcenter", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("broker", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("memo", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_crt", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_modi", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dac", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ddvc", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("batchno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("updatetime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("uuid", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_billsend_flag", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_open_salechnl", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_3party_cust", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("open_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("agencyno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_check_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_record_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_cust_type_sub", DataTypes.StringType, true));
            case "ip_agency":
                lookdf_st_list.add(DataTypes.createStructField("sk_agency", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("agency_level", DataTypes.createDecimalType(4, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("bk_channelno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_sale_channel", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_agency_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("agencyno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("agency_name", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("agency_branc_hname", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_helpself", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_virtual_flag", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("disp_order", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("memo", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_op", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dac", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ddvc", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("batchno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("updatetime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("uuid", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_3party_chnl", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("partnerid", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_check_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_record_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_crt", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_modi", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_service_flag", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_agency_type2", DataTypes.StringType, true));
            case "ip_agency_hierarchy":
                lookdf_st_list.add(DataTypes.createStructField("sk_agency", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_agency_tree", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency_parent", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("agency_level", DataTypes.createDecimalType(4, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency_of_lv1", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency_of_lv2", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency_of_lv3", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency_of_lv4", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency_of_lv5", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_istop", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_isleaf", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("lval", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("rval", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("flag", DataTypes.createDecimalType(4, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_from", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_to", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("memo", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_crt", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_modi", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dac", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ddvc", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("batchno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("updatetime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("uuid", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_check_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_record_status", DataTypes.StringType, true));
            case "comm_region_hierarchy":

                lookdf_st_list.add(DataTypes.createStructField("sk_region", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_region_tree", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("region_level", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region_parent", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_from", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("effective_to", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region_of_lv1", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region_of_lv2", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region_of_lv3", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region_of_lv4", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region_of_lv5", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("lval", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("rval", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("flag", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("memo", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_crt", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_modi", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dac", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ddvc", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("batchno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("updatetime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("uuid", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_check_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_record_status", DataTypes.StringType, true));
            case "comm_mkt_tradetype":
                lookdf_st_list.add(DataTypes.createStructField("sk_mkt_trade_type", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("bk_mkt_trade_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_mkt_trade_type_parent", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ori_bk_mkt_trade_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("mkt_trade_type_desc", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("mkt_trade_type_class", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("mkt_trade_type_desc2", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("shr_chg_dir", DataTypes.createDecimalType(4, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("income_rule", DataTypes.createDecimalType(4, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_ta_flag", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("memo", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_crt", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_modi", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dac", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ddvc", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("batchno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("updatetime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("uuid", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_check_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_record_status", DataTypes.StringType, true));
            case "agrm_tradeacco_reg":
                lookdf_st_list.add(DataTypes.createStructField("sk_tradeacco_reg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_account", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agreement", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_tano", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bk_fundaccount", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bk_tradeaccount", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("agencyno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("netno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_bonus_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bankno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bank_account", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("name_inbank", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("childnetno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("open_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("close_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_account_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_open_flag", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bk_tradeaccount_sa", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency_of_trx", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("memo", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_crt", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_modi", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dac", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ddvc", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("batchno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("updatetime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("uuid", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency_of_fst", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_region_of_trx", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency_of_open", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("rule_id", DataTypes.createDecimalType(12, 0), true));
            case "agrm_fundaccount":

                lookdf_st_list.add(DataTypes.createStructField("sk_account", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_tano", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bk_fundaccount", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("open_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("close_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_account_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_freeze_cause", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("back_date", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("last_modify", DataTypes.createDecimalType(8, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_bourseflag", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("memo", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_crt", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_modi", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dac", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ddvc", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("batchno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("updatetime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("uuid", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_his_trade_flag", DataTypes.StringType, true));
            case "trd_saletran":

                lookdf_st_list.add(DataTypes.createStructField("trd_st_trx_serialno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_account", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_tradeacco_reg", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agency", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_product", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_share_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_currency", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_agreement", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_mkt_trade_type", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("bk_fundaccount", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("bk_tradeaccount", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("cserialno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_tano", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("agencyno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("netno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("request_date", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_date", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("req_balance", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("req_shares", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("confirm_balance", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("confirm_shares", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("interest", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("interest_tax", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("total_fare", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("trade_fare", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("ta_fare", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("agency_fare", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("regist_fare", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("fund_fare", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("stamp_tax", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("back_fare", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("other_fare", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("return_fare", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("interest_share", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("netvalue", DataTypes.createDecimalType(7, 4), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_saletran_status", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_retcode", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_taflag", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("requestno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("agio", DataTypes.createDecimalType(6, 4), true));
                lookdf_st_list.add(DataTypes.createStructField("dk_bonus_type", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_exceedflag", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("childnetno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_freeze_cause", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("freeze_end_date", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("protocolno", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_bourseflag", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("back_fare_agio", DataTypes.createDecimalType(6, 4), true));
                lookdf_st_list.add(DataTypes.createStructField("fare_ratio", DataTypes.createDecimalType(6, 4), true));
                lookdf_st_list.add(DataTypes.createStructField("memo", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_crt", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("sk_invpty_of_modi", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("dac", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("ddvc", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("dk_system_of_upd", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("batchno", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("inserttime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("updatetime", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("uuid", DataTypes.StringType, true));
                lookdf_st_list.add(DataTypes.createStructField("self_trade_fee", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("rule_id", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("chincome", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("chshare", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("confirm_income", DataTypes.createDecimalType(17, 2), true));
                lookdf_st_list.add(DataTypes.createStructField("cust_count", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("trade_count", DataTypes.createDecimalType(12, 0), true));
                lookdf_st_list.add(DataTypes.createStructField("agency_backfare", DataTypes.createDecimalType(24, 4), true));
                lookdf_st_list.add(DataTypes.createStructField("manager_backfare", DataTypes.createDecimalType(24, 4), true));
                lookdf_st_list.add(DataTypes.createStructField("partition_sys", DataTypes.StringType, true));
        }
        return lookdf_st_list;
    }
}
